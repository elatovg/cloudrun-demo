steps:
- id: 'Pull-docker-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/flask:cloudrun-latest']

- id: 'Build-Docker-Image'
  waitFor: ['Pull-docker-image']
  name: 'gcr.io/cloud-builders/docker'
  dir: 'app'
  args: ['build',
         '-t', 'gcr.io/$PROJECT_ID/flask:$SHORT_SHA',
         '-t', 'gcr.io/$PROJECT_ID/flask:latest',
         '--cache-from', 'gcr.io/$PROJECT_ID/flask:cloudrun-latest',
         '-f', 'Dockerfile',
         '.']

- id: 'Push-the-Docker-Image-to-GCR'
  waitFor: ['Build-Docker-Image']
  name: 'gcr.io/cloud-builders/docker'
  args: [ "push", "gcr.io/$PROJECT_ID/flask:cloudrun-$SHORT_SHA"]

- id: 'Update-Cloud-Run'
  waitFor: ['Push-the-Docker-Image-to-GCR']
  name: 'gcr.io/cloud-builders/gcloud'
  args: ['run', 'deploy', '${_CR_SVC_NAME}',
         '--image', 'gcr.io/$PROJECT_ID/flask:cloudrun-$SHORT_SHA',
         '--region', '${_CR_REGION}', '--platform', 'managed',
         '--allow-unauthenticated']

substitutions:
  _CR_REGION: us-east4 # default value
  _CR_SVC_NAME: flask # default value

images:
- 'gcr.io/$PROJECT_ID/flask:cloudrun-latest'
